{"version":3,"sources":["App.js","actions/Actions.js","actions/actionTypes.js","reducer/reducer.js","store/store.js","index.js"],"names":["App","todos","useSelector","state","dispatch","useDispatch","length","onClick","type","payload","title","map","todo","id","removeTodo","TODO_INITIAL_STATE","createStore","action","uuid","completed","filter","items","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"iMAIe,SAASA,IACpB,IAAMC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,KAC7BC,EAAWC,cAOjB,OACI,6BACI,0CACA,8CAAoBJ,EAAMK,QAC1B,4BAAQC,QAVC,WACbH,ECLG,CACHI,KCJgB,UDKhBC,QAAQ,CACJC,MAAM,eDWN,YAEIT,EAAMU,KAAI,SAAAC,GAAI,OACV,uBAAGL,QAAS,WAVR,IAAAM,IAU2BD,EAAKC,GAThDT,ECAkB,SAACS,GACvB,MAAO,CACHL,KCZmB,aDanBC,QAAQ,CACJI,ODJKC,CAAWD,MAUHD,EAAKF,W,0BGlBxBK,EAAqB,GCAZC,eDEA,WAAyC,IAAxCb,EAAuC,uDAA/BY,EAAoBE,EAAW,uCACnD,OAAQA,EAAOT,MACX,IDPgB,UCQZ,MAAM,GAAN,mBACOL,GADP,CAEI,CACIU,GAAIK,cACJR,MAAQO,EAAOR,QAAQC,MACvBS,WAAU,KAGtB,IDfmB,aCgBf,OAAO,YACAhB,EAAMiB,QAAO,SAAAC,GAAK,OAAIA,EAAMR,KAAOI,EAAOR,QAAQI,OAE7D,IDlBkB,YCmBd,MAAO,GACX,QACI,OAAOV,KCpBgBmB,OAAOC,8BAAgCD,OAAOC,gCCGjFC,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC1B,EAAD,OAEF2B,SAASC,eAAe,W","file":"static/js/main.98d2452f.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport { addTodo , removeTodo} from './actions/Actions'\r\n\r\nexport default function App() {\r\n    const todos = useSelector(state => state)\r\n    const dispatch = useDispatch();\r\n    const addTodos = () => {\r\n        dispatch(addTodo())\r\n    }  \r\n    const removeTodos = id => {\r\n        dispatch(removeTodo(id))\r\n    } \r\n    return (\r\n        <div>\r\n            <p>hello world</p>\r\n            <p>todo's length : {todos.length}</p>\r\n            <button onClick={addTodos}>add todo</button>\r\n            {\r\n                todos.map(todo => (\r\n                    <p onClick={() => {removeTodos(todo.id)}}>\r\n                        {todo.title}\r\n                    </p>))\r\n            }            \r\n        </div>\r\n    )\r\n}\r\n","import * as actions from './actionTypes'\r\n\r\nexport const addTodo = () => {\r\n    return {\r\n        type:actions.ADD_TODO,\r\n        payload:{\r\n            title:\"bum bum\"\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeTodo = (id) => {\r\n    return {\r\n        type:actions.REMOVE_TODO,\r\n        payload:{\r\n            id\r\n        }\r\n    }\r\n}","export const ADD_TODO = \"addTodo\"\r\nexport const REMOVE_TODO = \"removeTodo\"\r\nexport const CHECK_TODO = \"checkTodo\"","import * as actions from '../actions/actionTypes'\r\nimport {v4 as uuid} from 'uuid'\r\n\r\nconst TODO_INITIAL_STATE = []\r\n\r\nexport default (state = TODO_INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case actions.ADD_TODO:\r\n            return [\r\n                ...state,\r\n                {\r\n                    id: uuid(),\r\n                    title : action.payload.title,\r\n                    completed:false\r\n                }\r\n            ];\r\n        case actions.REMOVE_TODO:\r\n            return [\r\n                ...state.filter(items => items.id !== action.payload.id)\r\n            ];\r\n        case actions.CHECK_TODO:\r\n            return [];\r\n        default:\r\n            return state;\r\n    }\r\n};","import { createStore } from 'redux'\r\nimport reducer from '../reducer/reducer'\r\n\r\nexport default createStore(reducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}